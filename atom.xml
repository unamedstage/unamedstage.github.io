<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nothing</title>
  
  <subtitle>I am Owner of My Creation</subtitle>
  <link href="https://blog.nothingto.me/atom.xml" rel="self"/>
  
  <link href="https://blog.nothingto.me/"/>
  <updated>2021-03-04T16:27:25.671Z</updated>
  <id>https://blog.nothingto.me/</id>
  
  <author>
    <name>Me</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>穷举一道古典概率题</title>
    <link href="https://blog.nothingto.me/a-classical-probability-problem-solving-with-brute-force"/>
    <id>https://blog.nothingto.me/a-classical-probability-problem-solving-with-brute-force</id>
    <published>2021-03-04T20:55:39.000Z</published>
    <updated>2021-03-04T16:27:25.671Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML"></script><p>之前的数学老师遇到我不会做的古典概率题，有时候会告诉我：<del>那你就去穷举啊</del>实在不会做就试着穷举看看，如果情况不多就还能做出来。不过穷举也和思路有关，因为穷举的时候首先要知道，列出的这些情况是否是<strong>等概率</strong>的情况。比如下面这道题，是一个朋友问我的；这里有一个正确答案和一个错误答案。</p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote><p>一个人把六根草紧握在手中，仅露出它们的头和尾。然后随机地把六个头两两相接，六个尾也两两相接。求放开手后六根草恰巧连成一个环的概率。</p></blockquote><p>六根草接成一个大环就是说，不出现两根草连在一起的小环和四根草连在一起的小环。由于每根草的头尾都和其他草相接，所以不会不连成环。</p><p>由于四根草连成小环的时候另外两根也连成小环，所以可以说：六根草连成一个大环的情况就是不出现两根草头尾均相接的情况。</p><h2 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h2><p>考虑六根草的头已经两两连接在一起成为三组，此时只需要把尾接好就可以了。这个时候，要保证六根草连成一个大环，就不能把同组的尾连在一起。</p><ul><li>首先选一根草。由于这时六根草是等价的，所以选哪根都一样；之后，在剩下的五根草里选一根，和这根草尾部相连。有两种情况：<ol><li>选到的是和这根草不同组的草。不同组的草有四根，故这种情况出现的概率占<script type="math/tex">\frac{4}{5}</script>；将上面两根草相接后，产生了一组四根草和一组两根草。在剩下的四根草中再选一根草。有两种情况：<ol><li>选到的是四根草一组中的草。这组草有两个头，所以概率占<script type="math/tex">\frac{1}{2}</script>；在剩下的三根草中选取一根和这根草相连，也有两种情况：<ol><li>和两根草组的草相连，满足了题目条件；概率占<script type="math/tex">\frac{2}{3}</script>；</li><li>和本组的草相连，不能满足题目条件；概率占<script type="math/tex">\frac{1}{3}</script>。</li></ol></li><li>选到的是两根草一组中的草。这组草有两个头，所以概率占<script type="math/tex">\frac{1}{2}</script>；在剩下的草中选取一根和这根草相连，也有两种情况：<ol><li>和四根草组的草相连，满足了题目条件；概率占<script type="math/tex">\frac{2}{3}</script>；</li><li>和本组的草相连，不能满足题目条件；概率占<script type="math/tex">\frac{1}{3}</script>。</li></ol></li></ol></li><li>选到的是和这根草同组的草。这种情况出现的概率占<script type="math/tex">\frac{1}{4}</script>，此时不能满足题目条件。</li></ol></li><li>最终满足条件的分支的总概率为：<script type="math/tex; mode=display">\frac{4}{5} \times (\frac{1}{2} \times \frac{2}{3} + \frac{1}{2} \times \frac{2}{3}) = \frac{8}{15}</script></li></ul><h2 id="另一个思路"><a href="#另一个思路" class="headerlink" title="另一个思路"></a>另一个思路</h2><p>在和那位朋友对了答案之后，我确定了正确结果就是<script type="math/tex">\frac{8}{15}</script>。不过那位朋友告诉我，他的一位朋友认为答案是<script type="math/tex">\frac{1}{3}</script>，理由是这样的：</p><p>他用了画图的方法来分析这些情况。画图能得到的结果有三种：</p><ol><li>六根草连成一个大环，即满足题目要求的情况；</li><li>四根草连成一个环，两根草连成一个环；</li><li>三组两根草连成三个小环。</li></ol><p>所以满足条件的概率为<script type="math/tex">\frac{1}{3}</script>。</p><p>在我和我的朋友质疑时候，他给出理由：从第一组选一根草开始连，只要连的是同一组的两根，就是等价的结果。而我们继续质疑这样等价会造成结果不等可能后，他说：<del>那你就去穷举啊</del>他所穷举出的结果只有上面的那三种可能。</p><p>我认为这是不适合的穷举造成的错误；他使用画图来穷尽所有的结果，但是一方面最终视觉上的结果不一定是<strong>等可能</strong>的，另一方面画图为这题的概率选择增添了额外的信息量：在连这几根草的尾部时，这个人并不知道头部是如何连接的——也就是说他并不知道哪几根草在同一组；但这一信息在图上反映了出来。于是我决定<del>让他看看什么是真正的穷举</del>把这道题的结果用Python穷举一下，其中包括模拟错误的思路，和正确的思路。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>我用一个<code>list</code>来表示一个结果，用相同的数字表示头在同一组的草；在<code>list</code>中相邻表示两根草尾相连。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="comment"># 第一组的草a连第二组的草a，第一组的草b连第三组的草a，第二组的草b连第三组的草b</span></span><br><span class="line"><span class="comment"># 这一结果满足题目要求</span></span><br><span class="line"></span><br><span class="line">result = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>]</span><br><span class="line"><span class="comment"># 第一组的草a连第二组的草a，第一组的草b连第二组的草b，第三组的草a连第三组的草b</span></span><br><span class="line"><span class="comment"># 这一结果不满足要求</span></span><br></pre></td></tr></table></figure></p><p>代码的完整输出偏长，这里不展示；只展示最后的结果。</p><h3 id="错误的结果"><a href="#错误的结果" class="headerlink" title="错误的结果"></a>错误的结果</h3><p>这一段程序通过用<code>list</code>的<code>index</code>来穷举，得到的是错误的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;wrong answer:&#x27;</span>)</span><br><span class="line">total = <span class="number">0</span></span><br><span class="line">hit = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    choose = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    result = []</span><br><span class="line">    result.append(<span class="number">1</span>)</span><br><span class="line">    result.append(choose.pop(i))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">        result.append(<span class="number">2</span>)</span><br><span class="line">        result.append(choose[j])</span><br><span class="line">        result.append(<span class="number">3</span>)</span><br><span class="line">        result.append(choose[<span class="number">1</span> - j])</span><br><span class="line">        print(result, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">0</span>] == result[<span class="number">1</span>] <span class="keyword">or</span> result[<span class="number">2</span>] == result[<span class="number">3</span>] <span class="keyword">or</span> result[<span class="number">4</span>] == result[<span class="number">5</span>]:</span><br><span class="line">            total += <span class="number">1</span></span><br><span class="line">            print(<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            total += <span class="number">1</span></span><br><span class="line">            hit += <span class="number">1</span></span><br><span class="line">            print(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">        result.pop()</span><br><span class="line">        result.pop()</span><br><span class="line">        result.pop()</span><br><span class="line">        result.pop()</span><br><span class="line">print(<span class="string">&#x27;prob = &#x27;</span> + <span class="built_in">str</span>(hit) + <span class="string">&#x27;/&#x27;</span> + <span class="built_in">str</span>(total))</span><br></pre></td></tr></table></figure><p>运行后，最后一行的输出为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prob &#x3D; 2&#x2F;6</span><br></pre></td></tr></table></figure><h3 id="正确的结果"><a href="#正确的结果" class="headerlink" title="正确的结果"></a>正确的结果</h3><p>这一段程序不考虑组号，通过对六根草进行全排列进行穷举，得到的结果是正确的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;right answer:&#x27;</span>)</span><br><span class="line">total = <span class="number">0</span></span><br><span class="line">hit = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    choose = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>]</span><br><span class="line">    result = []</span><br><span class="line">    result.append(choose.pop(i))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        choose5 = choose.copy()</span><br><span class="line">        result.append(choose5.pop(j))</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            choose4 = choose5.copy()</span><br><span class="line">            result.append(choose4.pop(k))</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                choose3 = choose4.copy()</span><br><span class="line">                result.append(choose3.pop(l))</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">                    result.append(choose3[m])</span><br><span class="line">                    result.append(choose3[<span class="number">1</span> - m])</span><br><span class="line">                    print(result, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> result[<span class="number">0</span>] == result[<span class="number">1</span>] <span class="keyword">or</span> result[<span class="number">2</span>] == result[<span class="number">3</span>] <span class="keyword">or</span> result[<span class="number">4</span>] == result[<span class="number">5</span>]:</span><br><span class="line">                        total += <span class="number">1</span></span><br><span class="line">                        print(<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        total += <span class="number">1</span></span><br><span class="line">                        hit += <span class="number">1</span></span><br><span class="line">                        print(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line">                    result.pop()</span><br><span class="line">                    result.pop()</span><br><span class="line">                result.pop()</span><br><span class="line">            result.pop()</span><br><span class="line">        result.pop()</span><br><span class="line">print(<span class="string">&#x27;prob = &#x27;</span> + <span class="built_in">str</span>(hit) + <span class="string">&#x27;/&#x27;</span> + <span class="built_in">str</span>(total))</span><br></pre></td></tr></table></figure><p>运行后，最后一行的输出为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prob &#x3D; 384&#x2F;720</span><br></pre></td></tr></table></figure><p>即正确结果<script type="math/tex">\frac{8}{15}</script>。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>写完才想起来Python是有直接列举排列组合的函数的，就是<code>itertool.combinations()</code>和<code>itertool.permutations()</code>；而且我匆忙之中代码写得很烂。<del>反正都穷举了，做对就行了</del></p>]]></content>
    
    
      
      
    <summary type="html"></summary>
      
    
    
    
    
    <category term="math" scheme="https://blog.nothingto.me/tags/math/"/>
    
    <category term="probability" scheme="https://blog.nothingto.me/tags/probability/"/>
    
    <category term="problem solving" scheme="https://blog.nothingto.me/tags/problem-solving/"/>
    
    <category term="Python" scheme="https://blog.nothingto.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.nothingto.me/hello-world"/>
    <id>https://blog.nothingto.me/hello-world</id>
    <published>2021-03-03T13:41:34.000Z</published>
    <updated>2021-03-04T16:31:02.474Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间把自己的社交媒体帐号全杀了以后，我发现自己面临着想发东西不知道往哪儿发的问题。这时候一个朋友和我提到他的博客的事情，再加上几天前看到一个近九十高龄的大佬还在非常自由地写<a href="https://robertpaulwolff.blogspot.com/">自己的博客</a>，<del>使我的内心受到了震撼</del>于是打算重新把博客建起来。总之建好了之后就是这样的。</p><p>在一年之前我曾经试过用<a href="https://pages.github.com/">Github Pages</a>建博客，但是最后失败了（指建完站以后把文章咕了）。一方面是因为那时候我有社交媒体帐号作为后盾：当时想着先把文章发到知乎，如果知乎不给发再发在自己的平台上。于是我就没有对博客上过心；不过现在我一无所有了。</p><p>另一方面是我的确也和一年前的我不一样了，换句话说就是我变强了。<del>其中包括建站速度变快了</del></p><p>一年前我用的工具是<a href="https://gridea.dev/">Gridea</a>，一个挺不错的GUI客户端；现在我改用<a href="https://hexo.io/">Hexo</a>了。Hexo的交互是CLI的，在换了主力系统之后我逐渐习惯了CLI的方式。两者并没有高下之分，纯粹是个人习惯问题。我选了个<a href="https://github.com/lotabout/hexo-theme-noise">简单的主题</a>，不加装饰。装饰并不能表达我，我所写的东西才能。</p><p>博客和社交媒体不同的地方在于：它归我所有。域名是我买的，仓库是我建的，Icon来自<a href="https://logomakr.com/">LogoMakr</a>但也是我设计的，我可以决定我在这里放什么东西，不受其他人的干涉。我所创作的一切都属于我。我写它，不是为了给别人看之类的网络社交目的，而是为了我自己。</p><blockquote><p>Ich singe, wie der Vogel singt,<br>Der in den Zweigen wohnet;<br>Das Lied, das aus der Kehle dringt,<br>Ist Lohn, der reichlich lohnet.</p><footer><strong>Johann Wolfgang Goethe</strong><cite>Der Sänger</cite></footer></blockquote>]]></content>
    
    
      
      
    <summary type="html"></summary>
      
    
    
    
    
    <category term="meta" scheme="https://blog.nothingto.me/tags/meta/"/>
    
  </entry>
  
</feed>
